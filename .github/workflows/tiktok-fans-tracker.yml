name: TikTok Fans Tracker & Deploy to GH Pages

on:
  schedule:
    - cron: '0 * * * *'  # 每小时执行一次（UTC时间）
  workflow_dispatch:  # 允许手动触发

jobs:
  track-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false  # 为后续提交步骤准备

      - name: Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
           authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Save Douyin HTML for debug
        run: |
          curl -s -L https://www.douyin.com/ -o douyin_home.html
          head -n 20 douyin_home.html

      - name: Upload Douyin HTML
        uses: actions/upload-artifact@v4
        with:
          name: douyin-html
          path: douyin_home.html
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium pandas matplotlib

      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip curl jq

          # 获取最新版 Chrome 和 ChromeDriver 下载地址
          LATEST_JSON=$(curl -s https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json)
          CHROME_VERSION=$(echo "$LATEST_JSON" | jq -r '.channels.Stable.version')
          DRIVER_URL=$(echo "$LATEST_JSON" | jq -r '.channels.Stable.downloads.chromedriver[] | select(.platform == "linux64") | .url')
          BROWSER_URL=$(echo "$LATEST_JSON" | jq -r '.channels.Stable.downloads.chrome[] | select(.platform == "linux64") | .url')

          # 安装 Chrome 浏览器
          mkdir chrome && cd chrome
          wget "$BROWSER_URL" -O chrome-linux.zip
          unzip chrome-linux.zip
          rm chrome-linux.zip
          sudo mv chrome-linux64 /opt/chrome
          sudo ln -sf /opt/chrome/chrome /usr/bin/google-chrome  # 强制覆盖
          cd ..

          # 安装 ChromeDriver
          wget "$DRIVER_URL" -O chromedriver.zip
          unzip chromedriver.zip
          rm chromedriver.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver


      - name: Check Chrome and ChromeDriver installation
        run: |
          echo "==> Chrome version:"
          google-chrome --version || chromium-browser --version || echo "Chrome not found"

          echo "==> ChromeDriver version:"
          chromedriver --version || echo "ChromeDriver not found"

          echo "==> Check ChromeDriver compatibility:"
          which chromedriver
          which google-chrome || which chromium-browser
      
      - name: Run tracker script
        id: run-script
        run: |
          # 运行跟踪脚本，并传递代理参数
          python tiktok_fans_tracker.py --proxy=http://100.108.141.117:3128 || echo "Tracker failed" >> debug_page.html

      - name: 自动提交粉丝数据文件
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "自动更新粉丝数据"
          file_pattern: "fans_data.csv"  # 只提交粉丝数据文件
          push_options: --force  # 确保能推送到分支
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用内置令牌授权

      - name: Ensure debug_page.html exists if failed
        if: failure()
        run: |
          echo "<!DOCTYPE html><html><body><h1>脚本执行失败</h1>" > debug_page.html
          echo "<pre>" >> debug_page.html
          tail -n 100 /home/runner/work/_temp/_runner_file_commands/* >> debug_page.html || echo "无日志" >> debug_page.html
          echo "</pre></body></html>" >> debug_page.html

      - name: Create index.html for GH Pages
        run: |
          echo "<!DOCTYPE html>" > index.html
          echo "<html lang='zh-CN'>" >> index.html
          echo "<head>" >> index.html
          echo "  <meta charset='UTF-8'>" >> index.html
          echo "  <meta name='viewport' content='width=device-width, initial-scale=1.0'>" >> index.html
          echo "  <title>抖音主播粉丝跟踪</title>" >> index.html
          echo "  <style>" >> index.html
          echo "    body { font-family: Arial, sans-serif; max-width: 1200px; margin: 0 auto; padding: 20px; }" >> index.html
          echo "    h1 { color: #333; text-align: center; }" >> index.html
          echo "    .chart-container { text-align: center; margin: 30px 0; }" >> index.html
          echo "    .chart-container img { max-width: 100%; border: 1px solid #ddd; border-radius: 4px; padding: 5px; }" >> index.html
          echo "    .data-table { width: 100%; border-collapse: collapse; margin: 20px 0; }" >> index.html
          echo "    .data-table th, .data-table td { border: 1px solid #ddd; padding: 8px; text-align: left; }" >> index.html
          echo "    .data-table th { background-color: #f2f2f2; }" >> index.html
          echo "    .last-update { color: #666; text-align: center; margin-top: 20px; }" >> index.html
          echo "  </style>" >> index.html
          echo "</head>" >> index.html
          echo "<body>" >> index.html
          echo "  <h1>抖音主播粉丝数变化趋势</h1>" >> index.html
          echo "  <div class='chart-container'>" >> index.html
          echo "    <img src='fans_trend.png' alt='粉丝变化趋势图'>" >> index.html
          echo "  </div>" >> index.html
          echo "  <h2>最新数据</h2>" >> index.html
          echo "  <table class='data-table'>" >> index.html
          echo "    <tr><th>时间</th><th>粉丝数量</th></tr>" >> index.html
          echo "$(tail -n 11 fans_data.csv | sed '1d' | awk -F ',' '{printf "    <tr><td>%s</td><td>%s</td></tr>\n", $1, $2}')" >> index.html
          echo "  </table>" >> index.html
          echo "  <p class='last-update'>最后更新: $(date +'%Y-%m-%d %H:%M:%S') UTC</p>" >> index.html
          echo "</body>" >> index.html
          echo "</html>" >> index.html

      - name: 上传调试页面
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: debug-page
          path: debug_page.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          publish_branch: gh-pages
